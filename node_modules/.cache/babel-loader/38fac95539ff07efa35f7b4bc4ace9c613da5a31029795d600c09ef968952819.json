{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\Components\\\\Header2.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header2 = () => {\n  _s();\n  const [scrolled, setscrolled] = useState(false);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  useEffect(() => {\n    const scrolfun = () => {\n      if (window.scrollY > 10) {\n        console.log(\"true\");\n        setscrolled(true);\n      } else {\n        console.log(\"false\");\n        setscrolled(false);\n      }\n    };\n    window.addEventListener(\"scroll\", scrolfun);\n  }, [scrolled]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      collapseOnSelect: true,\n      expand: \"md\",\n      className: scrolled ? \" fixed-top bg-white\" : \"bg-transparent text-white\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"React-Bootstrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"responsive-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"responsive-navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"m-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#features\",\n              className: \"mx-2\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#pricing\",\n              className: \"mx-2\",\n              children: \"Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#pricing\",\n              className: \"mx-2\",\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#pricing\",\n              className: \"mx-2\",\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#deets\",\n              children: \"More deets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: 2,\n              href: \"#memes\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleShow,\n                className: \"me-2\",\n                children: \"click\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header2, \"U7ouW+8Dtcukbb0mcj7dfXjktw8=\");\n_c = Header2;\nexport default Header2;\nvar _c;\n$RefreshReg$(_c, \"Header2\");","map":{"version":3,"names":["React","useState","useEffect","Container","Nav","Navbar","NavDropdown","Offcanvas","Button","Header2","scrolled","setscrolled","show","setShow","handleClose","handleShow","scrolfun","window","scrollY","console","log","addEventListener"],"sources":["C:/projects/practiceone/src/Components/Header2.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Button from 'react-bootstrap/Button';\r\nconst Header2 = () => {\r\n\r\n    const [scrolled, setscrolled] = useState(false)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n\r\n        const scrolfun = () => {\r\n\r\n            if (window.scrollY > 10) {\r\n                console.log(\"true\")\r\n                setscrolled(true)\r\n            }\r\n            else {\r\n                console.log(\"false\")\r\n                setscrolled(false)\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener(\"scroll\", scrolfun)\r\n\r\n    }, [scrolled])\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* className={scrolled ? \"bg-grey tofiexd\" : \"bg-white\" }  */}\r\n            <Navbar collapseOnSelect expand=\"md\" className={scrolled ? \" fixed-top bg-white\" : \"bg-transparent text-white\"} >\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"#features\" className='mx-2' >Home</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\" className='mx-2'>Reservation</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\" className='mx-2'>History</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\" className='mx-2'>Profile</Nav.Link>\r\n\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                            <Nav.Link eventKey={2} href=\"#memes\">\r\n                                {/* Dank memes */}\r\n                                <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n                                    click\r\n                                </Button>\r\n\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <Offcanvas show={show} onHide={handleClose} >\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    Some text as placeholder. In real life you can have the elements you\r\n                    have chosen. Like, text, images, lists, etc.\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header2"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}