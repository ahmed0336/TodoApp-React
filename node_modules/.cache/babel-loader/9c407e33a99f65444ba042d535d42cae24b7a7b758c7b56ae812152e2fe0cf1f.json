{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\Home2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home2 = () => {\n  _s();\n  const {\n    params\n  } = useParams();\n  console.log(\"parms ==>\", params);\n  //    console.log(\"id is ==>\",params.ID)\n\n  const Navigate = useNavigate();\n  useEffect(() => {\n    if (params == \"2\") {\n      console.log(\"id is ==>\", params);\n    } else {\n      console.log(\"id not found\");\n    }\n  }, []);\n\n  // State with list of all checked item\n  const [checkedArray, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = event => {\n    var updatedList = [...checkedArray];\n    if (event.target.checked) {\n      updatedList = [...checkedArray, event.target.value];\n    } else {\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checkedArray.length ? checkedArray.reduce((total, item) => {\n    return total + \", \" + item;\n  }) : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = item => checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  // console.log(\"my array==>\",allselect)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkList\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Your CheckList:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: checkList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item,\n              type: \"checkbox\",\n              onChange: handleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: isChecked(item),\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Items checked are: ${checkedItems}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home2, \"hJwSni0Q5gftimEqWMdUF6yC9Eo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Home2;\nexport default Home2;\nvar _c;\n$RefreshReg$(_c, \"Home2\");","map":{"version":3,"names":["React","useEffect","useState","Button","useNavigate","useParams","Home2","params","console","log","Navigate","checkedArray","setChecked","checkList","handleCheck","event","updatedList","target","checked","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","map","index"],"sources":["C:/projects/practiceone/src/Home2.js"],"sourcesContent":["import React, { useEffect }  from 'react'\r\nimport {  useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nconst Home2 = () => {\r\n\r\n   const { params } =  useParams()\r\n\r\n   console.log(\"parms ==>\",params)\r\n//    console.log(\"id is ==>\",params.ID)\r\n\r\n    const Navigate =useNavigate()\r\n\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(params == \"2\")\r\n        {\r\n            console.log(\"id is ==>\",params)\r\n        }\r\n        else{\r\n            console.log(\"id not found\")\r\n        }\r\n\r\n    },[])\r\n\r\n      // State with list of all checked item\r\n  const [checkedArray, setChecked] = useState([]);\r\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\r\n\r\n  // Add/Remove checked item from list\r\n  const handleCheck = (event) => {\r\n    var updatedList = [...checkedArray];\r\n    if (event.target.checked) {\r\n      updatedList = [...checkedArray, event.target.value];\r\n    } else {\r\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\r\n    }\r\n    setChecked(updatedList);\r\n    \r\n    \r\n\r\n  };\r\n\r\n  // Generate string of checked items\r\n  const checkedItems = checkedArray.length\r\n    ? checkedArray.reduce((total, item) => {\r\n      return total + \", \" + item;\r\n    })\r\n    : \"\";\r\n\r\n  // Return classes based on whether item is checked\r\n  var isChecked = (item) =>\r\n    checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\r\n\r\n\r\n  // console.log(\"my array==>\",allselect)\r\n\r\n  return (\r\n    <>\r\n     \r\n   \r\n\r\n      <h1>Home2</h1>\r\n      <div className=\"app\">\r\n        <div className=\"checkList\">\r\n          <div className=\"title\">Your CheckList:</div>\r\n          <div className=\"list-container\">\r\n            {checkList.map((item, index) => (\r\n              <div key={index}>\r\n                <input value={item} type=\"checkbox\" onChange={handleCheck} />\r\n                <span className={isChecked(item)}>{item}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          {`Items checked are: ${checkedItems}`}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home2"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}