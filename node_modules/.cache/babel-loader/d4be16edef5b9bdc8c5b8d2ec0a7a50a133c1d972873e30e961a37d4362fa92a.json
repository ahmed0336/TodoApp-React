{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\Home2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home2 = () => {\n  _s();\n  const params = useParams();\n  const {\n    ID\n  } = useParams();\n\n  //    console.log(\"id is ==>\",params.ID)\n\n  const Navigate = useNavigate();\n  // console.log(\"parms ==>\",params)\n\n  useEffect(() => {\n    // console.log(\"parms ==>\",params.ID)\n\n    if (params.ID == \"2\") {\n      console.log(\"id is ==>\", params.ID);\n    } else {\n      console.log(\"id not found\");\n    }\n  }, [params.ID]);\n\n  // State with list of all checked item\n  const [checkedArray, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = event => {\n    var updatedList = [...checkedArray];\n    if (event.target.checked) {\n      updatedList = [...checkedArray, event.target.value];\n    } else {\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checkedArray.length ? checkedArray.reduce((total, item) => {\n    return total + \", \" + item;\n  }) : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = item => checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  // console.log(\"my array==>\",allselect)\n\n  const nextbtn = () => {\n    Navigate(`/home3/${ID}/${\"ahmed\"}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ID == \"2\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Your CheckList:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-container\",\n            children: checkList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: item,\n                type: \"checkbox\",\n                onChange: handleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: isChecked(item),\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `Items checked are: ${checkedItems}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextbtn,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Home2, \"DXQwz4TWhMqJx7iX0JYYbStKqms=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n_c = Home2;\nexport default Home2;\nvar _c;\n$RefreshReg$(_c, \"Home2\");","map":{"version":3,"names":["React","useEffect","useState","Button","useNavigate","useParams","Home2","params","ID","Navigate","console","log","checkedArray","setChecked","checkList","handleCheck","event","updatedList","target","checked","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","nextbtn","map","index"],"sources":["C:/projects/practiceone/src/Home2.js"],"sourcesContent":["import React, { useEffect }  from 'react'\r\nimport {  useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nconst Home2 = () => {\r\n\r\n   const params  =  useParams()\r\n   const {ID}  =  useParams()\r\n\r\n   \r\n//    console.log(\"id is ==>\",params.ID)\r\n\r\n    const Navigate =useNavigate()\r\n            // console.log(\"parms ==>\",params)\r\n\r\n\r\n    useEffect(()=>{\r\n            // console.log(\"parms ==>\",params.ID)\r\n\r\n    \r\n        if(params.ID == \"2\")\r\n        {\r\n            console.log(\"id is ==>\",params.ID)\r\n        }\r\n        else{\r\n            console.log(\"id not found\")\r\n        }\r\n\r\n    },[params.ID])\r\n\r\n      // State with list of all checked item\r\n  const [checkedArray, setChecked] = useState([]);\r\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\r\n\r\n  // Add/Remove checked item from list\r\n  const handleCheck = (event) => {\r\n    var updatedList = [...checkedArray];\r\n    if (event.target.checked) {\r\n      updatedList = [...checkedArray, event.target.value];\r\n    } else {\r\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\r\n    }\r\n    setChecked(updatedList);\r\n    \r\n    \r\n\r\n  };\r\n\r\n  // Generate string of checked items\r\n  const checkedItems = checkedArray.length\r\n    ? checkedArray.reduce((total, item) => {\r\n      return total + \", \" + item;\r\n    })\r\n    : \"\";\r\n\r\n  // Return classes based on whether item is checked\r\n  var isChecked = (item) =>\r\n    checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\r\n\r\n\r\n  // console.log(\"my array==>\",allselect)\r\n\r\n  const nextbtn = () =>{\r\n      Navigate(`/home3/${ID}/${\"ahmed\"}`)\r\n      \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n    {\r\n        ID == \"2\" ? \r\n            \r\n         <>\r\n        <h1>Home2</h1>\r\n        <div className=\"app\">\r\n          <div className=\"checkList\">\r\n            <div className=\"title\">Your CheckList:</div>\r\n            <div className=\"list-container\">\r\n              {checkList.map((item, index) => (\r\n                <div key={index}>\r\n                  <input value={item} type=\"checkbox\" onChange={handleCheck} />\r\n                  <span className={isChecked(item)}>{item}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n  \r\n          <div>\r\n            {`Items checked are: ${checkedItems}`}\r\n          </div>\r\n        </div>\r\n         \r\n         <Button onClick={nextbtn} >next</Button>\r\n\r\n        </> \r\n        \r\n        : <h1>not found</h1>\r\n\r\n   \r\n              }\r\n   \r\n\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home2"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAS,OAAO;AACzC,SAAUC,QAAQ,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAAA;AAC1D,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEjB,MAAMC,MAAM,GAAKF,SAAS,EAAE;EAC5B,MAAM;IAACG;EAAE,CAAC,GAAKH,SAAS,EAAE;;EAG7B;;EAEI,MAAMI,QAAQ,GAAEL,WAAW,EAAE;EACrB;;EAGRH,SAAS,CAAC,MAAI;IACN;;IAGJ,IAAGM,MAAM,CAACC,EAAE,IAAI,GAAG,EACnB;MACIE,OAAO,CAACC,GAAG,CAAC,WAAW,EAACJ,MAAM,CAACC,EAAE,CAAC;IACtC,CAAC,MACG;MACAE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B;EAEJ,CAAC,EAAC,CAACJ,MAAM,CAACC,EAAE,CAAC,CAAC;;EAEZ;EACJ,MAAM,CAACI,YAAY,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMY,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;;EAEtD;EACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIC,WAAW,GAAG,CAAC,GAAGL,YAAY,CAAC;IACnC,IAAII,KAAK,CAACE,MAAM,CAACC,OAAO,EAAE;MACxBF,WAAW,GAAG,CAAC,GAAGL,YAAY,EAAEI,KAAK,CAACE,MAAM,CAACE,KAAK,CAAC;IACrD,CAAC,MAAM;MACLH,WAAW,CAACI,MAAM,CAACT,YAAY,CAACU,OAAO,CAACN,KAAK,CAACE,MAAM,CAACE,KAAK,CAAC,EAAE,CAAC,CAAC;IACjE;IACAP,UAAU,CAACI,WAAW,CAAC;EAIzB,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGX,YAAY,CAACY,MAAM,GACpCZ,YAAY,CAACa,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;IACrC,OAAOD,KAAK,GAAG,IAAI,GAAGC,IAAI;EAC5B,CAAC,CAAC,GACA,EAAE;;EAEN;EACA,IAAIC,SAAS,GAAID,IAAI,IACnBf,YAAY,CAACiB,QAAQ,CAACF,IAAI,CAAC,GAAG,cAAc,GAAG,kBAAkB;;EAGnE;;EAEA,MAAMG,OAAO,GAAG,MAAK;IACjBrB,QAAQ,CAAE,UAASD,EAAG,IAAG,OAAQ,EAAC,CAAC;EAEvC,CAAC;EAED,oBACE;IAAA,UAGIA,EAAE,IAAI,GAAG,gBAER;MAAA,wBACD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QAAK,SAAS,EAAC,KAAK;QAAA,wBAClB;UAAK,SAAS,EAAC,WAAW;UAAA,wBACxB;YAAK,SAAS,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB,eAC5C;YAAK,SAAS,EAAC,gBAAgB;YAAA,UAC5BM,SAAS,CAACiB,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBACzB;cAAA,wBACE;gBAAO,KAAK,EAAEL,IAAK;gBAAC,IAAI,EAAC,UAAU;gBAAC,QAAQ,EAAEZ;cAAY;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAC7D;gBAAM,SAAS,EAAEa,SAAS,CAACD,IAAI,CAAE;gBAAA,UAAEA;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAQ;YAAA,GAFvCK,KAAK;cAAA;cAAA;cAAA;YAAA,QAIhB;UAAC;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eAEN;UAAA,UACI,sBAAqBT,YAAa;QAAC;UAAA;UAAA;UAAA;QAAA,QACjC;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eAEL,QAAC,MAAM;QAAC,OAAO,EAAEO,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA,gBAEtC,gBAED;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAkB,iBAOrB;AAEP,CAAC;AAAA,GAtGKxB,KAAK;EAAA,QAESD,SAAS,EACXA,SAAS,EAKPD,WAAW;AAAA;AAAA,KARzBE,KAAK;AAwGX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}