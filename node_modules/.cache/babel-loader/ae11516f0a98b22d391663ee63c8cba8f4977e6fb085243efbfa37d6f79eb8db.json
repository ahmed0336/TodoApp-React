{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State with list of all checked item\n  const [checkedArray, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = event => {\n    var updatedList = [...checkedArray];\n    if (event.target.checked) {\n      updatedList = [...checkedArray, event.target.value];\n    } else {\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checkedArray.length ? checkedArray.reduce((total, item) => {\n    return total + \", \" + item;\n  }) : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = item => checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  // console.log(\"my array==>\",allselect)\n\n  const ahmedbtn = useRef('');\n  const safdarbtn = useRef('');\n  const helloworld = () => {\n    console.log(\"ahmedbtn\", ahmedbtn);\n    console.log(\"ahmedbtn.current\", ahmedbtn.current);\n    console.log(\"ahmedbtn.current\", safdarbtn.current);\n    ahmedbtn.current.style.color = \"red\";\n    safdarbtn.current.style.color = \"blue\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkList\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Your CheckList:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: checkList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item,\n              type: \"checkbox\",\n              onChange: handleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: isChecked(item),\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Items checked are: ${checkedItems}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: ahmedbtn,\n      children: \"ahmed \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: safdarbtn,\n      children: \"safdar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: helloworld,\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"CxR0zMJcrajL/FLWyuXq72ZzeJA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useRef","useState","Button","App","checkedArray","setChecked","checkList","handleCheck","event","updatedList","target","checked","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","ahmedbtn","safdarbtn","helloworld","console","log","current","style","color","map","index"],"sources":["C:/projects/practiceone/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nfunction App() {\n\n\n  \n  // State with list of all checked item\n  const [checkedArray, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = (event) => {\n    var updatedList = [...checkedArray];\n    if (event.target.checked) {\n      updatedList = [...checkedArray, event.target.value];\n    } else {\n      updatedList.splice(checkedArray.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checkedArray.length\n    ? checkedArray.reduce((total, item) => {\n        return total + \", \" + item;\n      })\n    : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = (item) =>\n    checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n\n  // console.log(\"my array==>\",allselect)\n\n  const ahmedbtn=useRef('')\n  const safdarbtn=useRef('')\n\n  const helloworld = () =>{\n\n    console.log(\"ahmedbtn\",ahmedbtn)\n    console.log(\"ahmedbtn.current\",ahmedbtn.current)\n\n    console.log(\"ahmedbtn.current\",safdarbtn.current)\n\n    ahmedbtn.current.style.color=\"red\"\n\n    safdarbtn.current.style.color=\"blue\"\n    \n  }\n\n  \n  return (\n    <>  \n      {/* <div className=\"App\"> */}\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      {/* <h1>hello baloch</h1>\n      <div className='row' >\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\"  defaultValue id=\"flexCheckChecked1\" \n   onChange={(e)=>handlechange(e,setcheckit1)}\n  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\" defaultValue id=\"flexCheckChecked2\"  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\" defaultValue id=\"flexCheckChecked3\"  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n\n      </div>\n    </div> */}\n\n<div className=\"app\">\n<div className=\"checkList\">\n  <div className=\"title\">Your CheckList:</div>\n  <div className=\"list-container\">\n    {checkList.map((item, index) => (\n      <div key={index}>\n        <input value={item} type=\"checkbox\" onChange={handleCheck} />\n        <span className={isChecked(item)}>{item}</span>\n      </div>\n    ))}\n  </div>\n</div>\n\n<div>\n  {`Items checked are: ${checkedItems}`}\n</div>\n</div>\n \n <p ref={ahmedbtn} >ahmed </p>\n <p ref={safdarbtn} >safdar </p>\n\n <Button onClick={helloworld} >hello</Button>\n\n</>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}