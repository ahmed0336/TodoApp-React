{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\Components\\\\Child.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Child = _ref => {\n  let {\n    data,\n    index\n  } = _ref;\n  console.log(\"data==>\", data);\n  // console.log(\"data==>\",index)\n\n  let baloch = data;\n  console.log(baloch);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: baloch.map((ele, ind) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ele\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n_c = Child;\nexport default Child;\nvar _c;\n$RefreshReg$(_c, \"Child\");","map":{"version":3,"names":["React","Child","data","index","console","log","baloch","map","ele","ind"],"sources":["C:/projects/practiceone/src/Components/Child.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Child = ({data,index}) => {\r\n\r\n    console.log(\"data==>\",data)\r\n    // console.log(\"data==>\",index)\r\n\r\n    let baloch=data\r\n\r\n    console.log(baloch)\r\n\r\n  return (\r\n    <>\r\n    \r\n    {\r\n      baloch.map((ele,ind)=>{\r\n        return(\r\n            <>\r\n             <li key={ind}>{ele}</li>\r\n            </>\r\n        )\r\n\r\n      })\r\n\r\n    }\r\n\r\n\r\n   \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Child"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,MAAMC,KAAK,GAAG,QAAkB;EAAA,IAAjB;IAACC,IAAI;IAACC;EAAK,CAAC;EAEvBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACH,IAAI,CAAC;EAC3B;;EAEA,IAAII,MAAM,GAACJ,IAAI;EAEfE,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EAErB,oBACE;IAAA,UAGEA,MAAM,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,GAAG,KAAG;MACpB,oBACI;QAAA,uBACC;UAAA,UAAeD;QAAG,GAATC,GAAG;UAAA;UAAA;UAAA;QAAA;MAAY,iBACtB;IAGT,CAAC;EAAC,iBAMD;AAEP,CAAC;AAAA,KA5BKR,KAAK;AA8BX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}