{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\practiceone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const allselect = [];\n  const [checkit, setcheckit1] = useState(false);\n  console.log(\"hello\", checkit);\n  const handlechange = e => {\n    console.log(\"==>\", e);\n    setcheckit1(!checkit);\n\n    //  allselect.push(checkit)\n  };\n\n  // State with list of all checked item\n  const [checked, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = event => {\n    var updatedList = [...checked];\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checked.length ? checked.reduce((total, item) => {\n    return total + \", \" + item;\n  }) : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = item => checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  // console.log(\"my array==>\",allselect)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello baloch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              defaultValue: true,\n              id: \"flexCheckChecked1\",\n              onChange: e => handlechange(e, setcheckit1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"flexCheckChecked\",\n              children: \"Checked checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              defaultValue: true,\n              id: \"flexCheckChecked2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"flexCheckChecked\",\n              children: \"Checked checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              defaultValue: true,\n              id: \"flexCheckChecked3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"flexCheckChecked\",\n              children: \"Checked checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkList\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Your CheckList:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\",\n          children: checkList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item,\n              type: \"checkbox\",\n              onChange: handleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: isChecked(item),\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Items checked are: ${checkedItems}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7CB/3nDOZUQ5TL7gP6Fv07Z6nMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","App","allselect","checkit","setcheckit1","console","log","handlechange","e","checked","setChecked","checkList","handleCheck","event","updatedList","target","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","map","index"],"sources":["C:/projects/practiceone/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n\n  const allselect=[]\n  \n      \n  const [checkit,setcheckit1]=useState(false)\n\n  console.log(\"hello\",checkit)\n\n  const handlechange = (e) =>{\n\n    console.log(\"==>\",e)\n   setcheckit1(!checkit) \n\n  //  allselect.push(checkit)\n\n  }\n\n  // State with list of all checked item\n  const [checked, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = (event) => {\n    var updatedList = [...checked];\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checked.length\n    ? checked.reduce((total, item) => {\n        return total + \", \" + item;\n      })\n    : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = (item) =>\n    checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n\n  // console.log(\"my array==>\",allselect)\n\n\n  \n  return (\n    <>  \n      <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <h1>hello baloch</h1>\n      <div className='row' >\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\"  defaultValue id=\"flexCheckChecked1\" \n   onChange={(e)=>handlechange(e,setcheckit1)}\n  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\" defaultValue id=\"flexCheckChecked2\"  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n      <div className='col-md-4' >\n      <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\" defaultValue id=\"flexCheckChecked3\"  />\n  <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n    Checked checkbox\n  </label>\n</div>\n\n      </div>\n\n      </div>\n    </div>\n\n<div className=\"app\">\n<div className=\"checkList\">\n  <div className=\"title\">Your CheckList:</div>\n  <div className=\"list-container\">\n    {checkList.map((item, index) => (\n      <div key={index}>\n        <input value={item} type=\"checkbox\" onChange={handleCheck} />\n        <span className={isChecked(item)}>{item}</span>\n      </div>\n    ))}\n  </div>\n</div>\n\n<div>\n  {`Items checked are: ${checkedItems}`}\n</div>\n</div>\n</>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}