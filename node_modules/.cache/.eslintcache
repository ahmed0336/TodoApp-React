[{"C:\\projects\\practiceone\\src\\index.js":"1","C:\\projects\\practiceone\\src\\App.js":"2","C:\\projects\\practiceone\\src\\reportWebVitals.js":"3","C:\\projects\\practiceone\\src\\home.js":"4","C:\\projects\\practiceone\\src\\Home.js":"5","C:\\projects\\practiceone\\src\\Home2.js":"6","C:\\projects\\practiceone\\src\\Home3.js":"7","C:\\projects\\practiceone\\src\\Components\\Header.js":"8","C:\\projects\\practiceone\\src\\Parent.js":"9","C:\\projects\\practiceone\\src\\Components\\Child.js":"10"},{"size":582,"mtime":1669805934797,"results":"11","hashOfConfig":"12"},{"size":693,"mtime":1671447908200,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1667911334974,"results":"14","hashOfConfig":"12"},{"size":3430,"mtime":1669812400045,"results":"15","hashOfConfig":"12"},{"size":1918,"mtime":1670414988555,"results":"16","hashOfConfig":"12"},{"size":3201,"mtime":1669812449560,"results":"17","hashOfConfig":"12"},{"size":2966,"mtime":1671106377567,"results":"18","hashOfConfig":"12"},{"size":1671,"mtime":1671453474188,"results":"19","hashOfConfig":"12"},{"size":4631,"mtime":1671527625607,"results":"20","hashOfConfig":"12"},{"size":1025,"mtime":1671526298517,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1tfrf90",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\practiceone\\src\\index.js",[],[],[],"C:\\projects\\practiceone\\src\\App.js",["57","58"],[],"import logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nimport Home  from './Home';\nimport Home2 from './Home2';\nimport Home3 from './Home3';\nimport Parent from './Parent';\n\nfunction App() {\n\n  \n\n\n\n\n  return (\n    <>\n    <Router>\n      <Routes>\n\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/home2/:ID\" element={<Home2 />} />\n        <Route path=\"/home3/:ID/:name\" element={<Home3 />} />\n\n        <Route path=\"/\" element={<Parent />} />\n\n\n\n        \n      </Routes>\n    </Router>\n    \n   \n\n     \n\n    </>\n\n  );\n}\n\nexport default App;\n","C:\\projects\\practiceone\\src\\reportWebVitals.js",[],[],"C:\\projects\\practiceone\\src\\home.js",[],[],"C:\\projects\\practiceone\\src\\Home.js",["59","60","61","62"],[],"import React  from 'react'\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button } from 'react-bootstrap';\r\nimport { NavLink, useNavigate ,Link, useParams } from 'react-router-dom';\r\nimport Header from './Components/Header';\r\n\r\nconst Home = () => {\r\n    const params  =  useParams()\r\n  console.log(params)\r\n\r\n//   const {name} = useParams()\r\n  \r\n    const Navigate= useNavigate()\r\n    \r\n  const [name,setname]=useState('')\r\n\r\n\r\n  const ahmedbtn = useRef('')\r\n  const safdarbtn = useRef('')\r\n  const inputref = useRef(null)\r\n  const preref = useRef('')\r\n\r\n  const according =useRef('')\r\n\r\n  const helloworld = () => {\r\n\r\n    console.log(\"ahmedbtn\", ahmedbtn)\r\n    console.log(\"ahmedbtn.current\", ahmedbtn.current)\r\n\r\n    console.log(\"safdar.current\", safdarbtn.current)\r\n\r\n    // console.log(\"inputref.current==>\", inputref.current.value = \"ahmed\")\r\n\r\n    inputref.current.focus()\r\n\r\n    inputref.current.style.BackGroundColor = \"black\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ahmedbtn.current.style.color = \"red\"\r\n\r\n    ahmedbtn.current.focus();\r\n\r\n    safdarbtn.current.style.color = \"blue\"\r\n\r\n    // console.log(according.current.click())\r\n\r\n    // according.current.onClick(alert(\"hello baloch\"))\r\n\r\n    // according.current.onClick.\r\n\r\n\r\n    Navigate(`/home2/${\"2\"}`)\r\n\r\n  }\r\n\r\n  useEffect(()=>{\r\n \r\n    preref.current= name;\r\n\r\n  },[name])\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setname(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n    <Header />\r\n    \r\n      <h1>Home</h1>\r\n       \r\n\r\n      <input type=\"text\" \r\n      value={name} \r\n      ref={inputref}\r\n      \r\n      onChange={handleChange}\r\n      />\r\n\r\n      <p ref={ahmedbtn} >ahmed </p>\r\n      <p ref={safdarbtn} >safdar </p>\r\n         \r\n         <h1>{`my name is ${name} and useref ${preref.current}`}</h1>\r\n \r\n      <Button onClick={helloworld} >hello</Button>\r\n\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\projects\\practiceone\\src\\Home2.js",["63","64","65","66","67"],[],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate, useParams ,NavLink } from 'react-router-dom';\r\nimport Header from './Components/Header';\r\nconst Home2 = () => {\r\n\r\n    const params = useParams()\r\n    const { ID } = useParams()\r\n\r\n\r\n    //    console.log(\"id is ==>\",params.ID)\r\n\r\n    const Navigate = useNavigate()\r\n    // console.log(\"parms ==>\",params)\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(\"parms ==>\",params.ID)\r\n\r\n\r\n        if (params.ID == \"2\") {\r\n            console.log(\"id is ==>\", params.ID)\r\n        }\r\n        else {\r\n            console.log(\"id not found\")\r\n        }\r\n\r\n    }, [0])\r\n\r\n    // State with list of all checked item\r\n    const [checkedArray, setChecked] = useState([]);\r\n    const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\r\n\r\n    // Add/Remove checked item from list\r\n    const handleCheck = (event) => {\r\n        var updatedList = [...checkedArray];\r\n        if (event.target.checked) {\r\n            updatedList = [...checkedArray, event.target.value];\r\n        } else {\r\n            updatedList.splice(checkedArray.indexOf(event.target.value), 1);\r\n        }\r\n        setChecked(updatedList);\r\n\r\n\r\n\r\n    };\r\n\r\n    // Generate string of checked items\r\n    const checkedItems = checkedArray.length\r\n        ? checkedArray.reduce((total, item) => {\r\n            return total + \", \" + item;\r\n        })\r\n        : \"\";\r\n\r\n    // Return classes based on whether item is checked\r\n    var isChecked = (item) =>\r\n        checkedArray.includes(item) ? \"checked-item\" : \"not-checked-item\";\r\n\r\n\r\n    // console.log(\"my array==>\",allselect)\r\n\r\n    const nextbtn = () => {\r\n        Navigate(`/home3/${ID}/${\"ahmed\"}`)\r\n\r\n    }\r\n\r\n    const backbtn = () => {\r\n        Navigate(`/`)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n           \r\n            {\r\n                ID == \"2\" ?\r\n\r\n                    <>\r\n                    <Header />\r\n                        <h1>Home2</h1>\r\n                        <div className=\"app\">\r\n                            <div className=\"checkList\">\r\n                                <div className=\"title\">Your CheckList:</div>\r\n                                <div className=\"list-container\">\r\n                                    {checkList.map((item, index) => (\r\n                                        <div key={index}>\r\n                                            <input value={item} type=\"checkbox\" onChange={handleCheck} />\r\n                                            <span className={isChecked(item)}>{item}</span>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                {`Items checked are: ${checkedItems}`}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button onClick={nextbtn} >next</Button>\r\n\r\n                        <Button onClick={backbtn} >back</Button>\r\n\r\n                    </>\r\n\r\n                    : <h1>not found</h1>\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home2","C:\\projects\\practiceone\\src\\Home3.js",["68","69"],[],"import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Header from './Components/Header';\r\n\r\nconst Home3 = () => {\r\n\r\n  const Navigate = useNavigate()\r\n  const paramswala = useParams()\r\n  const { name } = useParams()\r\n  const { ID } = useParams()\r\n\r\n  console.log(\"geting params name=>\", paramswala)\r\n  const Gonext = () => {\r\n    // useNavigate(``)\r\n  }\r\n\r\n  const backbtn = () => {\r\n    Navigate(`/home2/${ID}`)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const studentdata = [1, 2, 3, 4]\r\n\r\n  const [oldarray, setoldarray] = useState()\r\n\r\n  const [ahmed, setahmed] = useState(false)\r\n\r\n  console.log(\"oldarray\", oldarray)\r\n\r\n  const [reversearray, setreversearray] = useState([])\r\n\r\n  const reversefunction = (e) => {\r\n\r\n    setahmed(true)\r\n\r\n    console.log(\"student==>\", e)\r\n\r\n\r\n    let reverse = e;\r\n\r\n    setoldarray(reverse)\r\n\r\n    console.log(reverse, \"original array==>\")\r\n\r\n    console.log(reverse.length, \"length of mydata\")\r\n\r\n    let result = []\r\n\r\n\r\n    reverse.map((abc, index) => {\r\n\r\n      result.push(reverse[reverse.length - abc])\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n    console.log(\"reversed data ==>\", result)\r\n\r\n    setreversearray(result)\r\n    return result\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div>{`My name is ${name}`} </div>\r\n\r\n      <div className='d-flex   justify-content-around  flex-column    flex-md-row text-center ' >\r\n        <div className='one bg-dark w-40 ' >\r\n          ahmed\r\n        </div>\r\n        <div className='two bg-primary w-40 ' >\r\n          ilyas\r\n        </div>\r\n\r\n        \r\n\r\n\r\n      </div>\r\n\r\n      {\r\n        ahmed ?\r\n\r\n\r\n          <>\r\n\r\n\r\n\r\n            <p className='d-flex justify-content-space-around  clearfix' >\r\n              <h1 className='float-left' > Array Element</h1>\r\n\r\n              {\r\n                oldarray.map((s) => {\r\n                  return (\r\n                    <>\r\n\r\n                      <span  >\r\n                        {s}\r\n                      </span>\r\n\r\n                    </>\r\n                  )\r\n\r\n                })\r\n\r\n              }\r\n\r\n\r\n\r\n            </p>\r\n\r\n            <p className='d-flex justify-content-space-around ' >\r\n              <h1>Reverse Array Element</h1>\r\n              {\r\n                reversearray.map((s) => {\r\n                  return (\r\n                    <>\r\n\r\n\r\n                      <span >\r\n                        {s}\r\n                      </span>\r\n\r\n                    </>\r\n                  )\r\n\r\n                })\r\n\r\n              }\r\n\r\n            </p>\r\n\r\n          </>\r\n          : \"\"\r\n\r\n\r\n\r\n      }\r\n\r\n      <div className='clearfix ' >\r\n        <div className='float-left' >\r\n          <Button onClick={backbtn} >BACK</Button>\r\n        </div>\r\n\r\n        <div className='float-right' >\r\n          <Button onClick={() => reversefunction(studentdata)} >Reverse Array</Button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home3","C:\\projects\\practiceone\\src\\Components\\Header.js",[],[],"C:\\projects\\practiceone\\src\\Parent.js",["70","71","72","73"],[],"C:\\projects\\practiceone\\src\\Components\\Child.js",["74"],[],{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":7},{"ruleId":"75","severity":1,"message":"80","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":5,"column":32,"nodeType":"77","messageId":"78","endLine":5,"endColumn":36},{"ruleId":"75","severity":1,"message":"82","line":24,"column":9,"nodeType":"77","messageId":"78","endLine":24,"endColumn":18},{"ruleId":"75","severity":1,"message":"81","line":4,"column":34,"nodeType":"77","messageId":"78","endLine":4,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":22,"column":23,"nodeType":"85","messageId":"86","endLine":22,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":29,"column":8,"nodeType":"89","endLine":29,"endColumn":11,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":29,"column":9,"nodeType":"92","endLine":29,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":78,"column":20,"nodeType":"85","messageId":"86","endLine":78,"endColumn":22},{"ruleId":"75","severity":1,"message":"93","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":54,"column":30,"nodeType":"96","messageId":"97","endLine":54,"endColumn":32},{"ruleId":"75","severity":1,"message":"98","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"99","line":12,"column":11,"nodeType":"77","messageId":"78","endLine":12,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":30,"column":24,"nodeType":"85","messageId":"86","endLine":30,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":166,"column":34,"nodeType":"85","messageId":"86","endLine":166,"endColumn":36},{"ruleId":"75","severity":1,"message":"100","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Accordion' is defined but never used.","'NavLink' is defined but never used.","'according' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.ID'. Either include it or remove the dependency array.","ArrayExpression",["101"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'Gonext' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'country' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"102","fix":"103"},"Update the dependencies array to be: [params.ID]",{"range":"104","text":"105"},[697,700],"[params.ID]"]